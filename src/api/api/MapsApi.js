/*
 * Hangme API
 * Hangme offers services for our merchant, consumer, driver and partner applications. How you can interact with these services is documented here.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {Address} from '../model/Address';
import {ProblemDetails} from '../model/ProblemDetails';

/**
* Maps service.
* @module api/MapsApi
* @version v1
*/
export class MapsApi {

    /**
    * Constructs a new MapsApi. 
    * @alias module:api/MapsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the reverseLatitudeLongitude operation.
     * @callback moduleapi/MapsApi~reverseLatitudeLongitudeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Address{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reverse Latitude/Longitude
     * Reverses a longitude and latitude into an address
     * @param {Object} opts Optional parameters
     * @param {Number} opts.latitude 
     * @param {Number} opts.longitude 
     * @param {module:api/MapsApi~reverseLatitudeLongitudeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    reverseLatitudeLongitude(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'latitude': opts['latitude'],'longitude': opts['longitude']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Address;

      return this.apiClient.callApi(
        '/api/maps/reverse', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}