/*
 * Hangme API
 * Hangme offers services for our merchant, consumer, driver and partner applications. How you can interact with these services is documented here.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Entity} from './Entity';

/**
 * The Address model module.
 * @module model/Address
 * @version v1
 */
export class Address extends Entity {
  /**
   * Constructs a new <code>Address</code>.
   * @alias module:model/Address
   * @class
   * @extends module:model/Entity
   */
  constructor() {
    super();
  }

  /**
   * Constructs a <code>Address</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Address} obj Optional instance to populate.
   * @return {module:model/Address} The populated <code>Address</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Address();
      Entity.constructFromObject(data, obj);
      if (data.hasOwnProperty('country'))
        obj.country = ApiClient.convertToType(data['country'], 'String');
      if (data.hasOwnProperty('firstName'))
        obj.firstName = ApiClient.convertToType(data['firstName'], 'String');
      if (data.hasOwnProperty('lastName'))
        obj.lastName = ApiClient.convertToType(data['lastName'], 'String');
      if (data.hasOwnProperty('address1'))
        obj.address1 = ApiClient.convertToType(data['address1'], 'String');
      if (data.hasOwnProperty('address2'))
        obj.address2 = ApiClient.convertToType(data['address2'], 'String');
      if (data.hasOwnProperty('stateProvince'))
        obj.stateProvince = ApiClient.convertToType(data['stateProvince'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('postalCode'))
        obj.postalCode = ApiClient.convertToType(data['postalCode'], 'String');
      if (data.hasOwnProperty('latitude'))
        obj.latitude = ApiClient.convertToType(data['latitude'], 'Number');
      if (data.hasOwnProperty('longitude'))
        obj.longitude = ApiClient.convertToType(data['longitude'], 'Number');
      if (data.hasOwnProperty('phoneNumber'))
        obj.phoneNumber = ApiClient.convertToType(data['phoneNumber'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('addressText'))
        obj.addressText = ApiClient.convertToType(data['addressText'], 'String');
    }
    return obj;
  }
}

/**
 * ID of the Country for the Address
 * @member {String} country
 */
Address.prototype.country = undefined;

/**
 * First Name used to address
 * @member {String} firstName
 */
Address.prototype.firstName = undefined;

/**
 * Last Name used to contact the person at the address
 * @member {String} lastName
 */
Address.prototype.lastName = undefined;

/**
 * House/Street
 * @member {String} address1
 */
Address.prototype.address1 = undefined;

/**
 * District/Neighbourhood
 * @member {String} address2
 */
Address.prototype.address2 = undefined;

/**
 * State or Province of the Address
 * @member {String} stateProvince
 */
Address.prototype.stateProvince = undefined;

/**
 * The City the Address is in
 * @member {String} city
 */
Address.prototype.city = undefined;

/**
 * The Postal Code of the Address
 * @member {String} postalCode
 */
Address.prototype.postalCode = undefined;

/**
 * The Latitude used to represent this Address
 * @member {Number} latitude
 */
Address.prototype.latitude = undefined;

/**
 * The Longitude used to represent this Address
 * @member {Number} longitude
 */
Address.prototype.longitude = undefined;

/**
 * @member {String} phoneNumber
 */
Address.prototype.phoneNumber = undefined;

/**
 * @member {String} email
 */
Address.prototype.email = undefined;

/**
 * @member {String} addressText
 */
Address.prototype.addressText = undefined;

