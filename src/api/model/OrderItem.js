/*
 * Hangme API
 * Hangme offers services for our merchant, consumer, driver and partner applications. How you can interact with these services is documented here.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Entity} from './Entity';
import {OrderItemAddOn} from './OrderItemAddOn';
import {OrderStatus} from './OrderStatus';

/**
 * The OrderItem model module.
 * @module model/OrderItem
 * @version v1
 */
export class OrderItem extends Entity {
  /**
   * Constructs a new <code>OrderItem</code>.
   * @alias module:model/OrderItem
   * @class
   * @extends module:model/Entity
   */
  constructor() {
    super();
  }

  /**
   * Constructs a <code>OrderItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrderItem} obj Optional instance to populate.
   * @return {module:model/OrderItem} The populated <code>OrderItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new OrderItem();
      Entity.constructFromObject(data, obj);
      if (data.hasOwnProperty('orderId'))
        obj.orderId = ApiClient.convertToType(data['orderId'], 'Number');
      if (data.hasOwnProperty('order'))
        obj.order = ApiClient.convertToType(data['order'], Object);
      if (data.hasOwnProperty('productId'))
        obj.productId = ApiClient.convertToType(data['productId'], 'Number');
      if (data.hasOwnProperty('product'))
        obj.product = ApiClient.convertToType(data['product'], Object);
      if (data.hasOwnProperty('quantity'))
        obj.quantity = ApiClient.convertToType(data['quantity'], 'Number');
      if (data.hasOwnProperty('subtotalInclTax'))
        obj.subtotalInclTax = ApiClient.convertToType(data['subtotalInclTax'], 'Number');
      if (data.hasOwnProperty('subtotalExclTax'))
        obj.subtotalExclTax = ApiClient.convertToType(data['subtotalExclTax'], 'Number');
      if (data.hasOwnProperty('unitPriceInclTax'))
        obj.unitPriceInclTax = ApiClient.convertToType(data['unitPriceInclTax'], 'Number');
      if (data.hasOwnProperty('unitPriceExclTax'))
        obj.unitPriceExclTax = ApiClient.convertToType(data['unitPriceExclTax'], 'Number');
      if (data.hasOwnProperty('priceInclTax'))
        obj.priceInclTax = ApiClient.convertToType(data['priceInclTax'], 'Number');
      if (data.hasOwnProperty('priceExclTax'))
        obj.priceExclTax = ApiClient.convertToType(data['priceExclTax'], 'Number');
      if (data.hasOwnProperty('discountAmountInclTax'))
        obj.discountAmountInclTax = ApiClient.convertToType(data['discountAmountInclTax'], 'Number');
      if (data.hasOwnProperty('discountAmountExclTax'))
        obj.discountAmountExclTax = ApiClient.convertToType(data['discountAmountExclTax'], 'Number');
      if (data.hasOwnProperty('originalProductCost'))
        obj.originalProductCost = ApiClient.convertToType(data['originalProductCost'], 'Number');
      if (data.hasOwnProperty('weight'))
        obj.weight = ApiClient.convertToType(data['weight'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = OrderStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('isInCart'))
        obj.isInCart = ApiClient.convertToType(data['isInCart'], 'Boolean');
      if (data.hasOwnProperty('orderItemAddOns'))
        obj.orderItemAddOns = ApiClient.convertToType(data['orderItemAddOns'], [OrderItemAddOn]);
      if (data.hasOwnProperty('instruction'))
        obj.instruction = ApiClient.convertToType(data['instruction'], 'String');
    }
    return obj;
  }
}

/**
 * The ID of the Order this item relates to
 * @member {Number} orderId
 */
OrderItem.prototype.orderId = undefined;

/**
 * @member {Object} order
 */
OrderItem.prototype.order = undefined;

/**
 * The ID of the product
 * @member {Number} productId
 */
OrderItem.prototype.productId = undefined;

/**
 * The Product
 * @member {Object} product
 */
OrderItem.prototype.product = undefined;

/**
 * The quantity of the product being purchased
 * @member {Number} quantity
 */
OrderItem.prototype.quantity = undefined;

/**
 * @member {Number} subtotalInclTax
 */
OrderItem.prototype.subtotalInclTax = undefined;

/**
 * @member {Number} subtotalExclTax
 */
OrderItem.prototype.subtotalExclTax = undefined;

/**
 * The Unit price including tax
 * @member {Number} unitPriceInclTax
 */
OrderItem.prototype.unitPriceInclTax = undefined;

/**
 * @member {Number} unitPriceExclTax
 */
OrderItem.prototype.unitPriceExclTax = undefined;

/**
 * @member {Number} priceInclTax
 */
OrderItem.prototype.priceInclTax = undefined;

/**
 * @member {Number} priceExclTax
 */
OrderItem.prototype.priceExclTax = undefined;

/**
 * @member {Number} discountAmountInclTax
 */
OrderItem.prototype.discountAmountInclTax = undefined;

/**
 * @member {Number} discountAmountExclTax
 */
OrderItem.prototype.discountAmountExclTax = undefined;

/**
 * @member {Number} originalProductCost
 */
OrderItem.prototype.originalProductCost = undefined;

/**
 * @member {Number} weight
 */
OrderItem.prototype.weight = undefined;

/**
 * @member {module:model/OrderStatus} status
 */
OrderItem.prototype.status = undefined;

/**
 * @member {Boolean} isInCart
 */
OrderItem.prototype.isInCart = undefined;

/**
 * @member {Array.<module:model/OrderItemAddOn>} orderItemAddOns
 */
OrderItem.prototype.orderItemAddOns = undefined;

/**
 * @member {String} instruction
 */
OrderItem.prototype.instruction = undefined;

