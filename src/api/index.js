/*
 * Hangme API
 * Hangme offers services for our merchant, consumer, driver and partner applications. How you can interact with these services is documented here.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient';
import {AddOn} from './model/AddOn';
import {AddOnOption} from './model/AddOnOption';
import {Address} from './model/Address';
import {AuthenticatorDetails} from './model/AuthenticatorDetails';
import {Bank} from './model/Bank';
import {Category} from './model/Category';
import {Charity} from './model/Charity';
import {CheckoutApiRequest} from './model/CheckoutApiRequest';
import {Currency} from './model/Currency';
import {DayOfWeek} from './model/DayOfWeek';
import {DeliveryPartner} from './model/DeliveryPartner';
import {Download} from './model/Download';
import {EnableDisableTwoFactorAuthenticationResponse} from './model/EnableDisableTwoFactorAuthenticationResponse';
import {Entity} from './model/Entity';
import {GiftCardType} from './model/GiftCardType';
import {KHQRData} from './model/KHQRData';
import {KHQRResponseOfKHQRData} from './model/KHQRResponseOfKHQRData';
import {KHQRResponseStatusOfKHQRData} from './model/KHQRResponseStatusOfKHQRData';
import {KessApiResponseOfOrderData} from './model/KessApiResponseOfOrderData';
import {Language} from './model/Language';
import {Media} from './model/Media';
import {MediaLink} from './model/MediaLink';
import {MediaStorage} from './model/MediaStorage';
import {MerchantProductsDashboard} from './model/MerchantProductsDashboard';
import {MerchantStoreDashboard} from './model/MerchantStoreDashboard';
import {Note} from './model/Note';
import {NotificationDeviceType} from './model/NotificationDeviceType';
import {OneOfEntityTenant} from './model/OneOfEntityTenant';
import {OneOfKHQRResponseOfKHQRDataData} from './model/OneOfKHQRResponseOfKHQRDataData';
import {OneOfKHQRResponseOfKHQRDataStatus} from './model/OneOfKHQRResponseOfKHQRDataStatus';
import {OneOfKessApiResponseOfOrderDataData} from './model/OneOfKessApiResponseOfOrderDataData';
import {OneOfMerchantStoreDashboardSubscription} from './model/OneOfMerchantStoreDashboardSubscription';
import {OneOfresizeParams} from './model/OneOfresizeParams';
import {OneOfsort} from './model/OneOfsort';
import {OpeningHour} from './model/OpeningHour';
import {Order} from './model/Order';
import {OrderData} from './model/OrderData';
import {OrderDetail} from './model/OrderDetail';
import {OrderItem} from './model/OrderItem';
import {OrderItemAddOn} from './model/OrderItemAddOn';
import {OrderStatus} from './model/OrderStatus';
import {OrderType} from './model/OrderType';
import {PaymentMethod} from './model/PaymentMethod';
import {ProblemDetails} from './model/ProblemDetails';
import {Product} from './model/Product';
import {ProductAddOn} from './model/ProductAddOn';
import {ProductSortOption} from './model/ProductSortOption';
import {ProductType} from './model/ProductType';
import {ProductVariantType} from './model/ProductVariantType';
import {RecurringCyclePeriod} from './model/RecurringCyclePeriod';
import {ResizeParams} from './model/ResizeParams';
import {SearchResults} from './model/SearchResults';
import {Shipment} from './model/Shipment';
import {ShipmentQuote} from './model/ShipmentQuote';
import {ShipmentStatus} from './model/ShipmentStatus';
import {ShipmentType} from './model/ShipmentType';
import {ShippingMethod} from './model/ShippingMethod';
import {Sort} from './model/Sort';
import {SpecialCategory} from './model/SpecialCategory';
import {SpecialCategoryProduct} from './model/SpecialCategoryProduct';
import {Store} from './model/Store';
import {StoreCategory} from './model/StoreCategory';
import {Subscription} from './model/Subscription';
import {SubscriptionType} from './model/SubscriptionType';
import {SuspiciousActivityReport} from './model/SuspiciousActivityReport';
import {SuspiciousActivityReportOutcome} from './model/SuspiciousActivityReportOutcome';
import {SuspiciousActivityReportPriority} from './model/SuspiciousActivityReportPriority';
import {SuspiciousActivityReportStatus} from './model/SuspiciousActivityReportStatus';
import {SyncPlatform} from './model/SyncPlatform';
import {Tenant} from './model/Tenant';
import {TenantCurrency} from './model/TenantCurrency';
import {TenantLanguage} from './model/TenantLanguage';
import {TenantPaymentMethod} from './model/TenantPaymentMethod';
import {TenantShippingMethod} from './model/TenantShippingMethod';
import {TenantShippingMethodServiceType} from './model/TenantShippingMethodServiceType';
import {UserProfile} from './model/UserProfile';
import {VariantType} from './model/VariantType';
import {Verification} from './model/Verification';
import {VerificationDocument} from './model/VerificationDocument';
import {VerificationDocumentType} from './model/VerificationDocumentType';
import {VerificationStatus} from './model/VerificationStatus';
import {VerificationType} from './model/VerificationType';
import {Wishlist} from './model/Wishlist';
import {WishlistItem} from './model/WishlistItem';
import {MapsApi} from './api/MapsApi';
import {MarketplaceApi} from './api/MarketplaceApi';
import {MerchantApi} from './api/MerchantApi';
import {ShippingApi} from './api/ShippingApi';
import {TenantApi} from './api/TenantApi';

/**
* Hangme_offers_services_for_our_merchant_consumer_driver_and_partner_applications__How_you_can_interact_with_these_services_is_documented_here_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var HangmeApi = require('index'); // See note below*.
* var xxxSvc = new HangmeApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new HangmeApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new HangmeApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new HangmeApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddOn model constructor.
     * @property {module:model/AddOn}
     */
    AddOn,

    /**
     * The AddOnOption model constructor.
     * @property {module:model/AddOnOption}
     */
    AddOnOption,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The AuthenticatorDetails model constructor.
     * @property {module:model/AuthenticatorDetails}
     */
    AuthenticatorDetails,

    /**
     * The Bank model constructor.
     * @property {module:model/Bank}
     */
    Bank,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The Charity model constructor.
     * @property {module:model/Charity}
     */
    Charity,

    /**
     * The CheckoutApiRequest model constructor.
     * @property {module:model/CheckoutApiRequest}
     */
    CheckoutApiRequest,

    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency,

    /**
     * The DayOfWeek model constructor.
     * @property {module:model/DayOfWeek}
     */
    DayOfWeek,

    /**
     * The DeliveryPartner model constructor.
     * @property {module:model/DeliveryPartner}
     */
    DeliveryPartner,

    /**
     * The Download model constructor.
     * @property {module:model/Download}
     */
    Download,

    /**
     * The EnableDisableTwoFactorAuthenticationResponse model constructor.
     * @property {module:model/EnableDisableTwoFactorAuthenticationResponse}
     */
    EnableDisableTwoFactorAuthenticationResponse,

    /**
     * The Entity model constructor.
     * @property {module:model/Entity}
     */
    Entity,

    /**
     * The GiftCardType model constructor.
     * @property {module:model/GiftCardType}
     */
    GiftCardType,

    /**
     * The KHQRData model constructor.
     * @property {module:model/KHQRData}
     */
    KHQRData,

    /**
     * The KHQRResponseOfKHQRData model constructor.
     * @property {module:model/KHQRResponseOfKHQRData}
     */
    KHQRResponseOfKHQRData,

    /**
     * The KHQRResponseStatusOfKHQRData model constructor.
     * @property {module:model/KHQRResponseStatusOfKHQRData}
     */
    KHQRResponseStatusOfKHQRData,

    /**
     * The KessApiResponseOfOrderData model constructor.
     * @property {module:model/KessApiResponseOfOrderData}
     */
    KessApiResponseOfOrderData,

    /**
     * The Language model constructor.
     * @property {module:model/Language}
     */
    Language,

    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media,

    /**
     * The MediaLink model constructor.
     * @property {module:model/MediaLink}
     */
    MediaLink,

    /**
     * The MediaStorage model constructor.
     * @property {module:model/MediaStorage}
     */
    MediaStorage,

    /**
     * The MerchantProductsDashboard model constructor.
     * @property {module:model/MerchantProductsDashboard}
     */
    MerchantProductsDashboard,

    /**
     * The MerchantStoreDashboard model constructor.
     * @property {module:model/MerchantStoreDashboard}
     */
    MerchantStoreDashboard,

    /**
     * The Note model constructor.
     * @property {module:model/Note}
     */
    Note,

    /**
     * The NotificationDeviceType model constructor.
     * @property {module:model/NotificationDeviceType}
     */
    NotificationDeviceType,

    /**
     * The OneOfEntityTenant model constructor.
     * @property {module:model/OneOfEntityTenant}
     */
    OneOfEntityTenant,

    /**
     * The OneOfKHQRResponseOfKHQRDataData model constructor.
     * @property {module:model/OneOfKHQRResponseOfKHQRDataData}
     */
    OneOfKHQRResponseOfKHQRDataData,

    /**
     * The OneOfKHQRResponseOfKHQRDataStatus model constructor.
     * @property {module:model/OneOfKHQRResponseOfKHQRDataStatus}
     */
    OneOfKHQRResponseOfKHQRDataStatus,

    /**
     * The OneOfKessApiResponseOfOrderDataData model constructor.
     * @property {module:model/OneOfKessApiResponseOfOrderDataData}
     */
    OneOfKessApiResponseOfOrderDataData,

    /**
     * The OneOfMerchantStoreDashboardSubscription model constructor.
     * @property {module:model/OneOfMerchantStoreDashboardSubscription}
     */
    OneOfMerchantStoreDashboardSubscription,

    /**
     * The OneOfresizeParams model constructor.
     * @property {module:model/OneOfresizeParams}
     */
    OneOfresizeParams,

    /**
     * The OneOfsort model constructor.
     * @property {module:model/OneOfsort}
     */
    OneOfsort,

    /**
     * The OpeningHour model constructor.
     * @property {module:model/OpeningHour}
     */
    OpeningHour,

    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order,

    /**
     * The OrderData model constructor.
     * @property {module:model/OrderData}
     */
    OrderData,

    /**
     * The OrderDetail model constructor.
     * @property {module:model/OrderDetail}
     */
    OrderDetail,

    /**
     * The OrderItem model constructor.
     * @property {module:model/OrderItem}
     */
    OrderItem,

    /**
     * The OrderItemAddOn model constructor.
     * @property {module:model/OrderItemAddOn}
     */
    OrderItemAddOn,

    /**
     * The OrderStatus model constructor.
     * @property {module:model/OrderStatus}
     */
    OrderStatus,

    /**
     * The OrderType model constructor.
     * @property {module:model/OrderType}
     */
    OrderType,

    /**
     * The PaymentMethod model constructor.
     * @property {module:model/PaymentMethod}
     */
    PaymentMethod,

    /**
     * The ProblemDetails model constructor.
     * @property {module:model/ProblemDetails}
     */
    ProblemDetails,

    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product,

    /**
     * The ProductAddOn model constructor.
     * @property {module:model/ProductAddOn}
     */
    ProductAddOn,

    /**
     * The ProductSortOption model constructor.
     * @property {module:model/ProductSortOption}
     */
    ProductSortOption,

    /**
     * The ProductType model constructor.
     * @property {module:model/ProductType}
     */
    ProductType,

    /**
     * The ProductVariantType model constructor.
     * @property {module:model/ProductVariantType}
     */
    ProductVariantType,

    /**
     * The RecurringCyclePeriod model constructor.
     * @property {module:model/RecurringCyclePeriod}
     */
    RecurringCyclePeriod,

    /**
     * The ResizeParams model constructor.
     * @property {module:model/ResizeParams}
     */
    ResizeParams,

    /**
     * The SearchResults model constructor.
     * @property {module:model/SearchResults}
     */
    SearchResults,

    /**
     * The Shipment model constructor.
     * @property {module:model/Shipment}
     */
    Shipment,

    /**
     * The ShipmentQuote model constructor.
     * @property {module:model/ShipmentQuote}
     */
    ShipmentQuote,

    /**
     * The ShipmentStatus model constructor.
     * @property {module:model/ShipmentStatus}
     */
    ShipmentStatus,

    /**
     * The ShipmentType model constructor.
     * @property {module:model/ShipmentType}
     */
    ShipmentType,

    /**
     * The ShippingMethod model constructor.
     * @property {module:model/ShippingMethod}
     */
    ShippingMethod,

    /**
     * The Sort model constructor.
     * @property {module:model/Sort}
     */
    Sort,

    /**
     * The SpecialCategory model constructor.
     * @property {module:model/SpecialCategory}
     */
    SpecialCategory,

    /**
     * The SpecialCategoryProduct model constructor.
     * @property {module:model/SpecialCategoryProduct}
     */
    SpecialCategoryProduct,

    /**
     * The Store model constructor.
     * @property {module:model/Store}
     */
    Store,

    /**
     * The StoreCategory model constructor.
     * @property {module:model/StoreCategory}
     */
    StoreCategory,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The SubscriptionType model constructor.
     * @property {module:model/SubscriptionType}
     */
    SubscriptionType,

    /**
     * The SuspiciousActivityReport model constructor.
     * @property {module:model/SuspiciousActivityReport}
     */
    SuspiciousActivityReport,

    /**
     * The SuspiciousActivityReportOutcome model constructor.
     * @property {module:model/SuspiciousActivityReportOutcome}
     */
    SuspiciousActivityReportOutcome,

    /**
     * The SuspiciousActivityReportPriority model constructor.
     * @property {module:model/SuspiciousActivityReportPriority}
     */
    SuspiciousActivityReportPriority,

    /**
     * The SuspiciousActivityReportStatus model constructor.
     * @property {module:model/SuspiciousActivityReportStatus}
     */
    SuspiciousActivityReportStatus,

    /**
     * The SyncPlatform model constructor.
     * @property {module:model/SyncPlatform}
     */
    SyncPlatform,

    /**
     * The Tenant model constructor.
     * @property {module:model/Tenant}
     */
    Tenant,

    /**
     * The TenantCurrency model constructor.
     * @property {module:model/TenantCurrency}
     */
    TenantCurrency,

    /**
     * The TenantLanguage model constructor.
     * @property {module:model/TenantLanguage}
     */
    TenantLanguage,

    /**
     * The TenantPaymentMethod model constructor.
     * @property {module:model/TenantPaymentMethod}
     */
    TenantPaymentMethod,

    /**
     * The TenantShippingMethod model constructor.
     * @property {module:model/TenantShippingMethod}
     */
    TenantShippingMethod,

    /**
     * The TenantShippingMethodServiceType model constructor.
     * @property {module:model/TenantShippingMethodServiceType}
     */
    TenantShippingMethodServiceType,

    /**
     * The UserProfile model constructor.
     * @property {module:model/UserProfile}
     */
    UserProfile,

    /**
     * The VariantType model constructor.
     * @property {module:model/VariantType}
     */
    VariantType,

    /**
     * The Verification model constructor.
     * @property {module:model/Verification}
     */
    Verification,

    /**
     * The VerificationDocument model constructor.
     * @property {module:model/VerificationDocument}
     */
    VerificationDocument,

    /**
     * The VerificationDocumentType model constructor.
     * @property {module:model/VerificationDocumentType}
     */
    VerificationDocumentType,

    /**
     * The VerificationStatus model constructor.
     * @property {module:model/VerificationStatus}
     */
    VerificationStatus,

    /**
     * The VerificationType model constructor.
     * @property {module:model/VerificationType}
     */
    VerificationType,

    /**
     * The Wishlist model constructor.
     * @property {module:model/Wishlist}
     */
    Wishlist,

    /**
     * The WishlistItem model constructor.
     * @property {module:model/WishlistItem}
     */
    WishlistItem,

    /**
    * The MapsApi service constructor.
    * @property {module:api/MapsApi}
    */
    MapsApi,

    /**
    * The MarketplaceApi service constructor.
    * @property {module:api/MarketplaceApi}
    */
    MarketplaceApi,

    /**
    * The MerchantApi service constructor.
    * @property {module:api/MerchantApi}
    */
    MerchantApi,

    /**
    * The ShippingApi service constructor.
    * @property {module:api/ShippingApi}
    */
    ShippingApi,

    /**
    * The TenantApi service constructor.
    * @property {module:api/TenantApi}
    */
    TenantApi
};
